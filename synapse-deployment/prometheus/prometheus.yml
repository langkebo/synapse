# Prometheus 监控配置文件
# 针对1核2GB服务器优化的监控配置，包含好友功能专门监控

global:
  # 数据采集间隔
  scrape_interval: 30s
  
  # 规则评估间隔
  evaluation_interval: 30s
  
  # 外部标签
  external_labels:
    monitor: 'synapse-monitor'
    environment: 'production'
    server_type: '1core-2gb'
    deployment: 'docker'
    region: 'china'

# 规则文件
rule_files:
  - "/etc/prometheus/rules/*.yml"
  - "/etc/prometheus/rules/friends/*.yml"
  - "/etc/prometheus/rules/alerts/*.yml"

# 告警管理器配置（已禁用，如需启用请在 docker-compose 中添加 alertmanager 服务并取消注释）
# alerting:
#   alertmanagers:
#     - static_configs:
#         - targets:
#           - alertmanager:9093
#       timeout: 10s
#       api_version: v2

# 数据采集配置
scrape_configs:
  # Prometheus 自身监控
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s
    metrics_path: /metrics
    
  # Synapse 主服务监控
  - job_name: 'synapse'
    static_configs:
      - targets: ['synapse:8008']
    scrape_interval: 15s
    metrics_path: /_synapse/metrics
    scrape_timeout: 10s
    honor_labels: true
    params:
      format: ['prometheus']
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: synapse:8008
    metric_relabel_configs:
      # 重命名指标以便于识别
      - source_labels: [__name__]
        regex: 'synapse_(.*)'
        target_label: __name__
        replacement: 'synapse_${1}'
      # 添加服务标签
      - target_label: service
        replacement: 'synapse'
      # 添加好友功能标签
      - source_labels: [__name__]
        regex: '.*friends.*'
        target_label: feature
        replacement: 'friends'
    
  # 好友功能专门监控
  - job_name: 'synapse-friends'
    static_configs:
      - targets: ['synapse:8008']
    scrape_interval: 10s
    metrics_path: /_synapse/metrics
    params:
      format: ['prometheus']
    metric_relabel_configs:
      # 只保留好友相关指标
      - source_labels: [__name__]
        regex: '.*friends.*|.*friend.*'
        action: keep
      - target_label: component
        replacement: 'friends'
    
  # PostgreSQL 数据库监控
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres-exporter:9187']
    scrape_interval: 30s
    scrape_timeout: 10s
    relabel_configs:
      - target_label: service
        replacement: 'postgresql'
    
  # Redis 缓存监控
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-exporter:9121']
    scrape_interval: 30s
    scrape_timeout: 10s
    relabel_configs:
      - target_label: service
        replacement: 'redis'
    
  # 系统监控 (Node Exporter)
  - job_name: 'node'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 30s
    scrape_timeout: 10s
    relabel_configs:
      - target_label: service
        replacement: 'system'
    
  # Nginx 反向代理监控
  - job_name: 'nginx'
    static_configs:
      - targets: ['nginx-exporter:9113']
    scrape_interval: 30s
    scrape_timeout: 10s
    relabel_configs:
      - target_label: service
        replacement: 'nginx'
    
  # Docker 容器监控
  - job_name: 'docker'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 30s
    scrape_timeout: 10s
    metrics_path: /metrics
    relabel_configs:
      - target_label: service
        replacement: 'docker'
    
  # Grafana 监控
  - job_name: 'grafana'
    static_configs:
      - targets: ['grafana:3000']
    scrape_interval: 60s
    metrics_path: /metrics
    relabel_configs:
      - target_label: service
        replacement: 'grafana'
    
  # 自定义应用监控
  - job_name: 'custom-metrics'
    static_configs:
      - targets: ['synapse:8009']  # 自定义指标端口
    scrape_interval: 30s
    metrics_path: /custom-metrics
    honor_labels: true
    
  # 健康检查监控
  - job_name: 'health-checks'
    static_configs:
      - targets: 
        - 'synapse:8008'
        - 'postgres:5432'
        - 'redis:6379'
        - 'nginx:80'
    scrape_interval: 15s
    metrics_path: /health
    scheme: http
    
  # 联邦监控
  - job_name: 'federation'
    static_configs:
      - targets: ['synapse:8008']
    scrape_interval: 60s
    metrics_path: /_synapse/metrics
    params:
      format: ['prometheus']
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: '.*federation.*'
        action: keep
      - target_label: component
        replacement: 'federation'

# 远程写入配置（已禁用，如需启用请在 docker-compose 中添加 remote-storage 服务并取消注释）
# remote_write:
#   - url: "http://remote-storage:9201/write"
#     queue_config:
#       max_samples_per_send: 1000
#       max_shards: 5
#       capacity: 2500
#     write_relabel_configs:
#       - source_labels: [__name__]
#         regex: 'synapse_.*|friends_.*|system_.*'
#         action: keep

# 远程读取配置（已禁用，如需启用请在 docker-compose 中添加 remote-storage 服务并取消注释）
# remote_read:
#   - url: "http://remote-storage:9201/read"
#     read_recent: true

# 注意：Prometheus 不支持 storage/query/performance/alerting_rules/recording_rules/localization/debug/security/backup 等顶层字段，
# 相关参数已通过 docker-compose 中的命令行参数进行配置（例如 --storage.tsdb.retention.time、--query.max-concurrency 等）。