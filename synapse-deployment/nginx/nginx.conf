# Nginx 配置文件 - Synapse Matrix 服务器
# 针对1核2GB服务器优化的反向代理配置

# 全局配置
user nginx;
worker_processes 1;  # 1核CPU使用1个工作进程
worker_rlimit_nofile 768;

# 错误日志
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# 事件配置
events {
    worker_connections 384;  # 进一步降低连接数以适应低配置
    use epoll;
    multi_accept on;
    accept_mutex off;
}

# HTTP配置
http {
    # 基础配置
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # 日志格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    # 访问日志
    access_log /var/log/nginx/access.log main;
    
    # 性能优化配置
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 25;  # 降低超时时间
    keepalive_requests 80;
    types_hash_max_size 2048;
    server_tokens off;
    
    # 缓冲区配置 - 针对低内存优化
    client_body_buffer_size 8K;
    client_header_buffer_size 1k;
    client_max_body_size 50m;  # Matrix文件上传限制
    large_client_header_buffers 2 1k;
    
    # 超时配置
    client_body_timeout 12;
    client_header_timeout 12;
    send_timeout 10;
    
    # Gzip压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # 限流配置
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;
    limit_req_zone $binary_remote_addr zone=register:10m rate=1r/m;
    
    # 连接限制
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
    
    # 上游服务器配置
    upstream synapse_backend {
        server synapse:8008 max_fails=3 fail_timeout=30s;
        keepalive 2;  # 保持少量长连接
    }
    
    upstream synapse_federation {
        server synapse:8448 max_fails=3 fail_timeout=30s;
        keepalive 2;
    }
    
    upstream grafana_backend {
        server grafana:3000 max_fails=2 fail_timeout=30s;
        keepalive 1;
    }
    
    upstream prometheus_backend {
        server prometheus:9090 max_fails=2 fail_timeout=30s;
        keepalive 1;
    }
    
    upstream jaeger_backend {
        server jaeger:16686 max_fails=2 fail_timeout=30s;
        keepalive 1;
    }
    
    # 缓存配置 - 减少缓存大小
    proxy_cache_path /var/cache/nginx/synapse levels=1:2 keys_zone=synapse_cache:5m max_size=50m inactive=30m use_temp_path=off;
    proxy_cache_path /var/cache/nginx/static levels=1:2 keys_zone=static_cache:5m max_size=25m inactive=12h use_temp_path=off;
    
    # 主服务器配置 - Matrix 客户端API
    server {
        listen 80;
        listen [::]:80;
        server_name matrix.cjystx.top;
        
        # 重定向到HTTPS
        return 301 https://$server_name$request_uri;
    }
    
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name matrix.cjystx.top;
        
        # SSL配置
        ssl_certificate /etc/nginx/ssl/matrix.crt;
        ssl_certificate_key /etc/nginx/ssl/matrix.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        
        # 安全头
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options DENY;
        add_header X-XSS-Protection "1; mode=block";
        add_header Referrer-Policy "strict-origin-when-cross-origin";
        
        # 连接限制
        limit_conn conn_limit_per_ip 10;
        
        # Matrix 客户端API
        location /_matrix {
            # 限流
            limit_req zone=api burst=20 nodelay;
            
            # 代理配置
            proxy_pass http://synapse_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 超时配置
            proxy_connect_timeout 5s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # 缓冲配置
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
            
            # 长轮询支持
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }
        
        # 好友功能API
        location /_matrix/client/r0/friends {
            limit_req zone=api burst=10 nodelay;
            
            proxy_pass http://synapse_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 缓存好友列表
            proxy_cache synapse_cache;
            proxy_cache_valid 200 5m;
            proxy_cache_key "$scheme$request_method$host$request_uri";
            proxy_cache_bypass $http_cache_control;
            add_header X-Cache-Status $upstream_cache_status;
        }
        
        # 登录API - 严格限流
        location /_matrix/client/r0/login {
            limit_req zone=login burst=5 nodelay;
            
            proxy_pass http://synapse_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # 注册API - 更严格限流
        location /_matrix/client/r0/register {
            limit_req zone=register burst=2 nodelay;
            
            proxy_pass http://synapse_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # 媒体文件
        location /_matrix/media {
            # 缓存媒体文件
            proxy_cache static_cache;
            proxy_cache_valid 200 24h;
            proxy_cache_valid 404 1m;
            
            proxy_pass http://synapse_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 大文件上传配置
            client_max_body_size 50m;
            proxy_request_buffering off;
        }
        
        # Well-known配置
        location /.well-known/matrix/server {
            return 200 '{"m.server": "matrix.cjystx.top:443"}';
            add_header Content-Type application/json;
            add_header Access-Control-Allow-Origin *;
        }
        
        location /.well-known/matrix/client {
            return 200 '{"m.homeserver": {"base_url": "https://matrix.cjystx.top"}, "m.identity_server": {"base_url": "https://vector.im"}}';
            add_header Content-Type application/json;
            add_header Access-Control-Allow-Origin *;
        }
        
        # 健康检查
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # 默认拒绝
        location / {
            return 404;
        }
    }
    
    # Federation服务器配置
    server {
        listen 8448 ssl http2;
        listen [::]:8448 ssl http2;
        server_name matrix.cjystx.top;
        
        # SSL配置
        ssl_certificate /etc/nginx/ssl/matrix.crt;
        ssl_certificate_key /etc/nginx/ssl/matrix.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        
        # Federation API
        location / {
            proxy_pass http://synapse_federation;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 超时配置
            proxy_connect_timeout 10s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
    }
    
    # 主域名服务器配置 - 用于 .well-known 发现
    server {
        listen 80;
        listen [::]:80;
        server_name cjystx.top;
        
        # 重定向到HTTPS
        return 301 https://$server_name$request_uri;
    }
    
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name cjystx.top;
        
        # SSL配置
        ssl_certificate /etc/nginx/ssl/matrix.crt;
        ssl_certificate_key /etc/nginx/ssl/matrix.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        
        # 安全头
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options DENY;
        add_header X-XSS-Protection "1; mode=block";
        add_header Referrer-Policy "strict-origin-when-cross-origin";
        
        # Well-known配置 - 用于Matrix服务发现
        location /.well-known/matrix/server {
            return 200 '{"m.server": "matrix.cjystx.top:443"}';
            add_header Content-Type application/json;
            add_header Access-Control-Allow-Origin *;
        }
        
        location /.well-known/matrix/client {
            return 200 '{"m.homeserver": {"base_url": "https://matrix.cjystx.top"}, "m.identity_server": {"base_url": "https://vector.im"}}';
            add_header Content-Type application/json;
            add_header Access-Control-Allow-Origin *;
        }
        
        # 健康检查
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # 默认页面或重定向到Matrix客户端
        location / {
            return 302 https://matrix.cjystx.top;
        }
    }
    
    # Element客户端服务器配置
    server {
        listen 80;
        listen [::]:80;
        server_name element.cjystx.top;
        
        # 重定向到HTTPS
        return 301 https://$server_name$request_uri;
    }
    
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name element.cjystx.top;
        
        # SSL配置
        ssl_certificate /etc/nginx/ssl/element.crt;
        ssl_certificate_key /etc/nginx/ssl/element.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        
        # 安全头
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options SAMEORIGIN;
        add_header X-XSS-Protection "1; mode=block";
        add_header Referrer-Policy "strict-origin-when-cross-origin";
        
        # Element Web客户端
        location / {
            root /var/www/element;
            index index.html;
            try_files $uri $uri/ /index.html;
            
            # 缓存静态资源
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
            
            # 不缓存HTML文件
            location ~* \.html$ {
                expires -1;
                add_header Cache-Control "no-cache, no-store, must-revalidate";
            }
        }
        
        # Element配置文件
        location /config.json {
            alias /var/www/element/config.json;
            add_header Content-Type application/json;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
        }
        
        # 健康检查
        location /health {
            access_log off;
            return 200 "element healthy\n";
            add_header Content-Type text/plain;
        }
    }
    
    # 监控服务器配置
    server {
        listen 80;
        listen [::]:80;
        server_name monitoring.cjystx.top;
        
        # 重定向到HTTPS
        return 301 https://$server_name$request_uri;
    }
    
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name monitoring.cjystx.top;
        
        # SSL配置
        ssl_certificate /etc/nginx/ssl/monitoring.crt;
        ssl_certificate_key /etc/nginx/ssl/monitoring.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        
        # 安全头
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options SAMEORIGIN;
        add_header X-XSS-Protection "1; mode=block";
        add_header Referrer-Policy "strict-origin-when-cross-origin";
        
        # 基础认证（可选）
        # auth_basic "Monitoring";
        # auth_basic_user_file /etc/nginx/.htpasswd;
        # auth_basic_user_file /etc/nginx/.htpasswd;
        
        # Grafana
        location /grafana/ {
            proxy_pass http://grafana_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket支持
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
        
        # Prometheus
        location /prometheus/ {
            proxy_pass http://prometheus_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Jaeger
        location /jaeger/ {
            proxy_pass http://jaeger_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # 监控首页
        location / {
            return 200 '
<!DOCTYPE html>
<html>
<head>
    <title>Synapse 监控面板</title>
    <meta charset="utf-8">
    <style>
        body { font-family: Arial, sans-serif; margin: 40px; }
        .service { margin: 20px 0; padding: 20px; border: 1px solid #ddd; border-radius: 5px; }
        .service h3 { margin-top: 0; color: #333; }
        .service a { color: #007bff; text-decoration: none; }
        .service a:hover { text-decoration: underline; }
    </style>
</head>
<body>
    <h1>Synapse Matrix 服务器监控</h1>
    
    <div class="service">
        <h3>📊 Grafana 仪表板</h3>
        <p>查看系统指标、性能监控和业务数据</p>
        <a href="/grafana/" target="_blank">打开 Grafana</a>
    </div>
    
    <div class="service">
        <h3>🔍 Prometheus 指标</h3>
        <p>原始指标数据和查询界面</p>
        <a href="/prometheus/" target="_blank">打开 Prometheus</a>
    </div>
    
    <div class="service">
        <h3>🔗 Jaeger 追踪</h3>
        <p>分布式追踪和性能分析</p>
        <a href="/jaeger/" target="_blank">打开 Jaeger</a>
    </div>
    
    <div class="service">
        <h3>📈 系统状态</h3>
        <p>服务器运行状态：<span style="color: green;">正常</span></p>
        <p>最后更新：<span id="timestamp"></span></p>
    </div>
    
    <script>
        document.getElementById("timestamp").textContent = new Date().toLocaleString("zh-CN");
    </script>
</body>
</html>
            ';
            add_header Content-Type "text/html; charset=utf-8";
        }
    }
    
    # 状态监控服务器
    server {
        listen 8081;
        server_name localhost;
        
        # Nginx状态
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 172.16.0.0/12;  # Docker网络
            deny all;
        }
        
        # 健康检查
        location /health {
            access_log off;
            return 200 "nginx healthy\n";
            add_header Content-Type text/plain;
        }
    }
}

# Stream配置（TCP/UDP代理）
stream {
    # 日志格式
    log_format stream_main '$remote_addr [$time_local] $protocol $bytes_sent $bytes_received $session_time';
    
    # PostgreSQL代理（可选）
    # upstream postgres_backend {
    #     server postgres:5432;
    # }
    # 
    # server {
    #     listen 5432;
    #     proxy_pass postgres_backend;
    #     proxy_timeout 1s;
    #     proxy_responses 1;
    #     error_log /var/log/nginx/postgres.log;
    # }
    
    # Redis代理（可选）
    # upstream redis_backend {
    #     server redis:6379;
    # }
    # 
    # server {
    #     listen 6379;
    #     proxy_pass redis_backend;
    #     proxy_timeout 1s;
    #     proxy_responses 1;
    #     error_log /var/log/nginx/redis.log;
    # }
}